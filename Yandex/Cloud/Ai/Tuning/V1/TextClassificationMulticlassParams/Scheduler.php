<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: yandex/cloud/ai/tuning/v1/tuning_service.proto

namespace Yandex\Cloud\Ai\Tuning\V1\TextClassificationMulticlassParams;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>yandex.cloud.ai.tuning.v1.TextClassificationMulticlassParams.Scheduler</code>
 */
class Scheduler extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>double warmup_ratio = 101;</code>
     */
    protected $warmup_ratio = 0.0;
    protected $type;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Yandex\Cloud\Ai\Tuning\V1\SchedulerLinear $linear
     *     @type \Yandex\Cloud\Ai\Tuning\V1\SchedulerConstant $constant
     *     @type \Yandex\Cloud\Ai\Tuning\V1\SchedulerCosine $cosine
     *     @type float $warmup_ratio
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Yandex\Cloud\Ai\Tuning\V1\TuningService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.yandex.cloud.ai.tuning.v1.SchedulerLinear linear = 1;</code>
     * @return \Yandex\Cloud\Ai\Tuning\V1\SchedulerLinear|null
     */
    public function getLinear()
    {
        return $this->readOneof(1);
    }

    public function hasLinear()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.yandex.cloud.ai.tuning.v1.SchedulerLinear linear = 1;</code>
     * @param \Yandex\Cloud\Ai\Tuning\V1\SchedulerLinear $var
     * @return $this
     */
    public function setLinear($var)
    {
        GPBUtil::checkMessage($var, \Yandex\Cloud\Ai\Tuning\V1\SchedulerLinear::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.yandex.cloud.ai.tuning.v1.SchedulerConstant constant = 2;</code>
     * @return \Yandex\Cloud\Ai\Tuning\V1\SchedulerConstant|null
     */
    public function getConstant()
    {
        return $this->readOneof(2);
    }

    public function hasConstant()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.yandex.cloud.ai.tuning.v1.SchedulerConstant constant = 2;</code>
     * @param \Yandex\Cloud\Ai\Tuning\V1\SchedulerConstant $var
     * @return $this
     */
    public function setConstant($var)
    {
        GPBUtil::checkMessage($var, \Yandex\Cloud\Ai\Tuning\V1\SchedulerConstant::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.yandex.cloud.ai.tuning.v1.SchedulerCosine cosine = 3;</code>
     * @return \Yandex\Cloud\Ai\Tuning\V1\SchedulerCosine|null
     */
    public function getCosine()
    {
        return $this->readOneof(3);
    }

    public function hasCosine()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.yandex.cloud.ai.tuning.v1.SchedulerCosine cosine = 3;</code>
     * @param \Yandex\Cloud\Ai\Tuning\V1\SchedulerCosine $var
     * @return $this
     */
    public function setCosine($var)
    {
        GPBUtil::checkMessage($var, \Yandex\Cloud\Ai\Tuning\V1\SchedulerCosine::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>double warmup_ratio = 101;</code>
     * @return float
     */
    public function getWarmupRatio()
    {
        return $this->warmup_ratio;
    }

    /**
     * Generated from protobuf field <code>double warmup_ratio = 101;</code>
     * @param float $var
     * @return $this
     */
    public function setWarmupRatio($var)
    {
        GPBUtil::checkDouble($var);
        $this->warmup_ratio = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getType()
    {
        return $this->whichOneof("type");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Scheduler::class, \Yandex\Cloud\Ai\Tuning\V1\TextClassificationMulticlassParams_Scheduler::class);


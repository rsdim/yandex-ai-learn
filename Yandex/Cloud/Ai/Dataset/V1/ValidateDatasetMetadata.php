<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: yandex/cloud/ai/dataset/v1/dataset_service.proto

namespace Yandex\Cloud\Ai\Dataset\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>yandex.cloud.ai.dataset.v1.ValidateDatasetMetadata</code>
 */
class ValidateDatasetMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * ID of the dataset.
     *
     * Generated from protobuf field <code>string dataset_id = 1;</code>
     */
    protected $dataset_id = '';
    /**
     * Count of valid rows among currently processed rows in the dataset.
     *
     * Generated from protobuf field <code>int64 valid_rows = 2;</code>
     */
    protected $valid_rows = 0;
    /**
     * Count of currently processed rows in the dataset.
     *
     * Generated from protobuf field <code>int64 processed_rows = 3;</code>
     */
    protected $processed_rows = 0;
    /**
     * Total count of rows in the dataset
     *
     * Generated from protobuf field <code>int64 total_rows = 4;</code>
     */
    protected $total_rows = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $dataset_id
     *           ID of the dataset.
     *     @type int|string $valid_rows
     *           Count of valid rows among currently processed rows in the dataset.
     *     @type int|string $processed_rows
     *           Count of currently processed rows in the dataset.
     *     @type int|string $total_rows
     *           Total count of rows in the dataset
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Yandex\Cloud\Ai\Dataset\V1\DatasetService::initOnce();
        parent::__construct($data);
    }

    /**
     * ID of the dataset.
     *
     * Generated from protobuf field <code>string dataset_id = 1;</code>
     * @return string
     */
    public function getDatasetId()
    {
        return $this->dataset_id;
    }

    /**
     * ID of the dataset.
     *
     * Generated from protobuf field <code>string dataset_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDatasetId($var)
    {
        GPBUtil::checkString($var, True);
        $this->dataset_id = $var;

        return $this;
    }

    /**
     * Count of valid rows among currently processed rows in the dataset.
     *
     * Generated from protobuf field <code>int64 valid_rows = 2;</code>
     * @return int|string
     */
    public function getValidRows()
    {
        return $this->valid_rows;
    }

    /**
     * Count of valid rows among currently processed rows in the dataset.
     *
     * Generated from protobuf field <code>int64 valid_rows = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setValidRows($var)
    {
        GPBUtil::checkInt64($var);
        $this->valid_rows = $var;

        return $this;
    }

    /**
     * Count of currently processed rows in the dataset.
     *
     * Generated from protobuf field <code>int64 processed_rows = 3;</code>
     * @return int|string
     */
    public function getProcessedRows()
    {
        return $this->processed_rows;
    }

    /**
     * Count of currently processed rows in the dataset.
     *
     * Generated from protobuf field <code>int64 processed_rows = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setProcessedRows($var)
    {
        GPBUtil::checkInt64($var);
        $this->processed_rows = $var;

        return $this;
    }

    /**
     * Total count of rows in the dataset
     *
     * Generated from protobuf field <code>int64 total_rows = 4;</code>
     * @return int|string
     */
    public function getTotalRows()
    {
        return $this->total_rows;
    }

    /**
     * Total count of rows in the dataset
     *
     * Generated from protobuf field <code>int64 total_rows = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTotalRows($var)
    {
        GPBUtil::checkInt64($var);
        $this->total_rows = $var;

        return $this;
    }

}


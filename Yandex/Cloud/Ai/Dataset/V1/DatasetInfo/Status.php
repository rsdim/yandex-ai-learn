<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: yandex/cloud/ai/dataset/v1/dataset.proto

namespace Yandex\Cloud\Ai\Dataset\V1\DatasetInfo;

use UnexpectedValueException;

/**
 * Status of the dataset.
 *
 * Protobuf type <code>yandex.cloud.ai.dataset.v1.DatasetInfo.Status</code>
 */
class Status
{
    /**
     * Generated from protobuf enum <code>STATUS_UNSPECIFIED = 0;</code>
     */
    const STATUS_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>DRAFT = 1;</code>
     */
    const DRAFT = 1;
    /**
     * Generated from protobuf enum <code>VALIDATING = 2;</code>
     */
    const VALIDATING = 2;
    /**
     * Generated from protobuf enum <code>READY = 3;</code>
     */
    const READY = 3;
    /**
     * Generated from protobuf enum <code>INVALID = 4;</code>
     */
    const INVALID = 4;
    /**
     * Generated from protobuf enum <code>DELETING = 5;</code>
     */
    const DELETING = 5;

    private static $valueToName = [
        self::STATUS_UNSPECIFIED => 'STATUS_UNSPECIFIED',
        self::DRAFT => 'DRAFT',
        self::VALIDATING => 'VALIDATING',
        self::READY => 'READY',
        self::INVALID => 'INVALID',
        self::DELETING => 'DELETING',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Status::class, \Yandex\Cloud\Ai\Dataset\V1\DatasetInfo_Status::class);

